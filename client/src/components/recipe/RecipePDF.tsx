"use client";

import { Recipe } from "@/lib/types";
import {
  Document,
  Page,
  Text,
  View,
  StyleSheet,
  PDFDownloadLink,
} from "@react-pdf/renderer";
import Button from "@/components/ui/Button";
import { Download } from "lucide-react";

interface RecipePDFProps {
  recipe: Recipe;
}

const styles = StyleSheet.create({
  page: {
    padding: 40,
    fontSize: 12,
    fontFamily: "Helvetica",
  },
  section: {
    marginBottom: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: "bold",
    marginBottom: 15,
    textAlign: "center",
  },
  subtitle: {
    fontSize: 16,
    fontWeight: "bold",
    marginBottom: 10,
    paddingBottom: 5,
    borderBottom: "1px solid #ccc",
  },
  row: {
    flexDirection: "row",
    flexWrap: "wrap",
  },
  metaItem: {
    marginHorizontal: 15,
    flexDirection: "row",
  },
  metaLabel: {
    fontWeight: "bold",
    marginRight: 5,
  },
  metaValue: {
    color: "#666",
  },
  ingredient: {
    flexDirection: "row",
    marginBottom: 5,
    alignItems: "flex-start",
  },
  bullet: {
    marginRight: 5,
    width: 10,
  },
  ingredientName: {
    fontWeight: "bold",
    marginRight: 5,
  },
  ingredientQuantity: {
    color: "#666",
  },
  text: {
    lineHeight: 1.6,
  },
});

export default function RecipePDF({ recipe }: RecipePDFProps) {
  const safeRecipe = {
    ...recipe,
    title: recipe.title || "Untitled Recipe",
    difficulty: recipe.difficulty || "Medium",
    preparationTime: recipe.preparationTime || 0,
    cookingMethod: recipe.cookingMethod || "No instructions available",
    ingredients: recipe.ingredients || [],
  };

  const filename = `${safeRecipe.title.replace(/\s+/g, "-").toLowerCase()}.pdf`;

  return (
    <PDFDownloadLink
      document={<RecipeDocument recipe={safeRecipe} />}
      fileName={filename}
    >
      {({ loading }) => (
        <Button
          className="flex items-center"
          variant="primary"
          isLoading={loading}
        >
          <Download className="w-4 h-4 mr-2" />
          Download PDF
        </Button>
      )}
    </PDFDownloadLink>
  );
}

const RecipeDocument = ({ recipe }: RecipePDFProps) => (
  <Document>
    <Page size="A4" style={styles.page}>
      <View style={styles.section} key="recipe-header">
        <Text style={styles.title}>{recipe.title}</Text>

        <View
          style={[styles.row, { justifyContent: "center", marginBottom: 15 }]}
          key="recipe-meta-container"
        >
          <View style={styles.metaItem} key="difficulty-meta">
            <Text style={styles.metaLabel}>Difficulty:</Text>
            <Text style={styles.metaValue}>{recipe.difficulty}</Text>
          </View>

          <View style={styles.metaItem} key="time-meta">
            <Text style={styles.metaLabel}>Time:</Text>
            <Text style={styles.metaValue}>
              {recipe.preparationTime} minutes
            </Text>
          </View>
        </View>
      </View>

      <View style={styles.section}>
        <Text style={styles.subtitle}>Ingredients</Text>
        {recipe.ingredients.map((item) => (
          <View style={styles.ingredient} key={item.ingredientId}>
            <Text style={styles.bullet}>â€¢</Text>
            <Text style={styles.ingredientName}>{item.ingredient.name}</Text>
            <Text style={styles.ingredientQuantity}>({item.quantity})</Text>
          </View>
        ))}
      </View>

      <View style={styles.section}>
        <Text style={styles.subtitle}>Cooking Method</Text>
        <Text style={styles.text}>{recipe.cookingMethod}</Text>
      </View>

      <View style={[styles.section, { marginTop: 20 }]}>
        <Text style={[styles.text, { fontSize: 10, textAlign: "center" }]}>
          Generated by Meal Mashup - Random Recipe Generator
        </Text>
      </View>
    </Page>
  </Document>
);
